<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Spark初尝试</title>
    <link href="/blog/2021/07/08/Spark%E5%88%9D%E5%B0%9D%E8%AF%95/"/>
    <url>/blog/2021/07/08/Spark%E5%88%9D%E5%B0%9D%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Spark的开发环境搭建"><a href="#Spark的开发环境搭建" class="headerlink" title="Spark的开发环境搭建"></a>Spark的开发环境搭建</h1><h2 id="spark与scala版本对应"><a href="#spark与scala版本对应" class="headerlink" title="spark与scala版本对应"></a>spark与scala版本对应</h2><p>2.3.x的spark  -&gt;选择2.11.x的scala</p><p>2.4.x的spark  -&gt;选择2.12.x的scala</p><blockquote><p>去官网下载scala包，同时idea中下载scala plugin （用于提示scala文件的新建），如果右键不能看见scala项目，可以右键项目，add FrameSupport，选择scala插件</p></blockquote><ul><li>spark standalone：saprk集群，spark自己的调度系统，需要分发spark</li><li>spark on yarn ：spark使用yarn的调度，不需要分发saprk程序，本质是相当于saprk作为一个jar包提交到yarn上，然后返回spark的上下文信息</li><li>spark开发环境：就是开发环境，可以单机运行，即从maven下载相应的包即可运行</li></ul><h2 id="一、spark开发环境搭建"><a href="#一、spark开发环境搭建" class="headerlink" title="一、spark开发环境搭建"></a>一、spark开发环境搭建</h2><p>可以直接下载spark-core jar包导入环境（本地开发模式不需要配置spark集群）或者新建一个maven项目</p><ul><li>修改pom.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.spark/spark-core --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.spark<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spark-core_2.11<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br><br></code></pre></td></tr></table></figure></li><li>demo.txt文件内容：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hello world</span><br><span class="hljs-attribute">hello hudi</span><br><span class="hljs-attribute">hello imapla</span><br><span class="hljs-attribute">hello scala</span><br></code></pre></td></tr></table></figure><ul><li>伴生对象<br>注意master设置成local[*]<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">import org.apache.spark.SparkConf<br>import org.apache.spark.SparkContext<br><span class="hljs-keyword">object</span> Hello_Spark &#123;<br>  def main(args: Array<span class="hljs-literal">[S<span class="hljs-identifier">tring</span>]</span>): Unit = &#123;<br>    <span class="hljs-keyword">val</span> conf=<span class="hljs-keyword">new</span> <span class="hljs-constructor">SparkConf()</span>.set<span class="hljs-constructor">AppName(<span class="hljs-string">&quot;wordcount&quot;</span>)</span>.set<span class="hljs-constructor">Master(<span class="hljs-string">&quot;local[*]&quot;</span>)</span><br>    <span class="hljs-keyword">val</span> sc=<span class="hljs-keyword">new</span> <span class="hljs-constructor">SparkContext(<span class="hljs-params">conf</span>)</span><br>    <span class="hljs-keyword">val</span> input=sc.text<span class="hljs-constructor">File(<span class="hljs-string">&quot;/Users/maple/Documents/demo.txt&quot;</span>)</span><br>    <span class="hljs-keyword">val</span> lines=input.flat<span class="hljs-constructor">Map(<span class="hljs-params">line</span>=&gt;<span class="hljs-params">line</span>.<span class="hljs-params">split</span>(<span class="hljs-string">&quot; &quot;</span>)</span>)<br>    <span class="hljs-keyword">val</span> count=lines.map(word=&gt;(word,<span class="hljs-number">1</span>)).reduceByKey&#123;case<span class="hljs-function"> (<span class="hljs-params">x</span>,<span class="hljs-params">y</span>)=&gt;</span>x+y&#125;<br>    <span class="hljs-keyword">val</span> output=count.save<span class="hljs-constructor">AsTextFile(<span class="hljs-string">&quot;/Users/maple/Documents/hellosparkRes&quot;</span>)</span><br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>注意：开发环境—-&gt; local模式、standlone模式、集群模式。其中开发模式不需要配置集群环境，可以理解成一个可以运行spark程序的单机环境（setMaster(“local[*]”)），也可以理解成可以连接集群的客户端；同理，设置Master为spark集群的入口就行</p></blockquote></li></ul><h2 id="二、spark-on-yarn环境配置-非idea方式"><a href="#二、spark-on-yarn环境配置-非idea方式" class="headerlink" title="二、spark on yarn环境配置(非idea方式)"></a>二、spark on yarn环境配置(非idea方式)</h2><p><strong>以下的配置都是基于spark on yarn，也就是在一个节点配置即可，然后作为yarn提交application的客户端。</strong> 如果想配置spark的standlone模式，使用spark自己的任务调度框架，就需要所有节点都配置了</p><ol><li><p>修改yarn-site.xml并分发</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--是否启动一个线程检查每个任务正使用的物理内存量，如果任务超出分配值，则直接将其杀掉，默认是true --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.pmem-check-enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是true --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.vmem-check-enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>修改spark-env.sh</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">SPARK_DIST_CLASSPATH=$(<span class="hljs-regexp">/home/</span>hadoop<span class="hljs-regexp">/apps/</span>hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span><span class="hljs-regexp">/bin/</span>hadoop <span class="hljs-keyword">classpath</span>)<br>export JAVA_HOME=<span class="hljs-regexp">/home/</span>hadoop<span class="hljs-regexp">/apps/</span>jdk1.<span class="hljs-number">8.0</span>_144<br>YARN_CONF_DIR=<span class="hljs-regexp">/home/</span>hadoop<span class="hljs-regexp">/apps/</span>hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">2</span><span class="hljs-regexp">/etc/</span>hadoop<br></code></pre></td></tr></table></figure></li><li><p>执行测试用例同时可以查看yarn-web</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">bin/spark-submit \<br>--class org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.spark</span><span class="hljs-selector-class">.examples</span><span class="hljs-selector-class">.SparkPi</span> \<br>--master yarn \<br>./examples/jars/spark-examples_2.<span class="hljs-number">11</span>-<span class="hljs-number">2.4</span>.<span class="hljs-number">7</span><span class="hljs-selector-class">.jar</span> \<br><span class="hljs-number">10</span><br><br></code></pre></td></tr></table></figure></li></ol><p><strong>配置saprk日志收集</strong></p><ol><li>修改 spark-defaults.conf<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">spark<span class="hljs-selector-class">.eventLog</span><span class="hljs-selector-class">.enabled</span>          true<br>spark<span class="hljs-selector-class">.eventLog</span><span class="hljs-selector-class">.dir</span>               hdfs:<span class="hljs-comment">//hdp1:9000/directory</span><br><br>spark<span class="hljs-selector-class">.yarn</span><span class="hljs-selector-class">.historyServer</span>.address=hdp3:<span class="hljs-number">18080</span><br><br></code></pre></td></tr></table></figure><blockquote><p>**在本案例中一定要配在hdp3,因为hdp3是spark提交的地方，如果配在其他地方，18080这个端口可能打开不了，重定向，应该是spark任务完成后回收到driver端，driver端打开一个端口提供用户查询历史信息</p></blockquote></li></ol><ul><li>运行中看状态都是hdp2的resourcemanger节点上的8080端口看spark的运行状态，<br><code>http://hdp2:8088/proxy/application_1610971944849_0006/</code></li><li>运行完成后才会重定向到<code>http://hdp3:18080/history/application_1610971944849_0006/jobs/</code></li></ul><ol start="2"><li>修改spark-env.sh<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">export SPARK_HISTORY_OPTS=<span class="hljs-comment">&quot;</span><br>-Dspark.<span class="hljs-keyword">history</span>.ui.port=<span class="hljs-number">18080</span> <br>-Dspark.<span class="hljs-keyword">history</span>.fs.logDirectory=hdf<span class="hljs-variable">s:</span>//hdp1:<span class="hljs-number">9000</span>/directory <br>-Dspark.<span class="hljs-keyword">history</span>.retainedApplications=<span class="hljs-number">30</span><span class="hljs-comment">&quot;</span><br></code></pre></td></tr></table></figure></li></ol><ul><li>   参数1含义：WEB UI访问的端口号为18080</li><li>   参数2含义：指定历史服务器日志存储路径</li><li>   参数3含义：指定保存Application历史记录的个数，如果超过这个值，旧的应用程序信息将被删除，这个是内存中的应用数，而不是页面上显示的应用数。</li></ul><ol start="3"><li>启动历史服务<br>spark中的</li></ol><p><code>sbin/start-history-server.sh</code></p><h2 id="三、Spark-on-yarn开发环境配置（idea）"><a href="#三、Spark-on-yarn开发环境配置（idea）" class="headerlink" title="三、Spark on yarn开发环境配置（idea）"></a>三、Spark on yarn开发环境配置（idea）</h2><p>说明：第二点是以其中一个节点当做saprk的提交节点，其余节点不需要，现在第三点是以idea开发机作为spark的提交节点，在集群节点中不需要安装任何spark有关的内容。<br>需要hadoop即可，如果想使用hive，还需要元素据，本章节站不考虑。</p><ul><li><p>打开idea 配置依赖pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hadoop<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hadoop-common<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;scope&gt;test&lt;/scope&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hadoop<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hadoop-hdfs<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;scope&gt;test&lt;/scope&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.spark<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spark-core_2.11<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;scope&gt;test&lt;/scope&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.spark<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spark-sql_2.11<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;scope&gt;test&lt;/scope&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.spark/spark-yarn --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.spark<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spark-yarn_2.11<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--    报错才加--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.netty<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>netty-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.1.18.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;groupId&gt;org.scala-lang&lt;/groupId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;artifactId&gt;scala-library&lt;/artifactId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;version&gt;2.11.12&lt;/version&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/dependency&gt;--&gt;</span><br><br><span class="hljs-comment">&lt;!--    &lt;dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;groupId&gt;mysql&lt;/groupId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;version&gt;5.1.34&lt;/version&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;artifactId&gt;spark-hive_2.11&lt;/artifactId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;version&gt;2.2.1&lt;/version&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/dependency&gt;--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>导入<code>core-site.xml</code> <code>hdfs-site.xml</code> <code>yarn-site.xml</code>放在resource文件下</p></li><li><p>编辑运行时的参数<br><br><code>vm options:-DHADOOP_USER_NAME=hadoop</code><br><br><code>环境变量：HADOOP_HOME=F:\Program Files\hadoop_win;</code><br><br><code>SPARK_HOME=F:\Program Files\spark-2.4.7-bin-hadoop2.7\</code></p><blockquote><p>注意windows开发机需要winutils.exe</p></blockquote></li><li><p>scala代码</p></li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">object</span> Spark_01 &#123;<br>  def main(args: Array<span class="hljs-literal">[S<span class="hljs-identifier">tring</span>]</span>): Unit = &#123;<br>    <span class="hljs-keyword">val</span> conf = <span class="hljs-keyword">new</span> <span class="hljs-constructor">SparkConf()</span><br>    conf.set<span class="hljs-constructor">AppName(<span class="hljs-string">&quot;test&quot;</span>)</span>.set<span class="hljs-constructor">Master(<span class="hljs-string">&quot;yarn-client&quot;</span>)</span><br>    <span class="hljs-keyword">val</span> sc = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">SparkSession</span>.</span></span>builder.config(conf).get<span class="hljs-constructor">OrCreate()</span><br>    import sc.implicits._<br><span class="hljs-comment">//    val list = new util.ArrayList[People]()</span><br><span class="hljs-comment">//    list.add(new People(&quot;huzhiwei&quot;,21))</span><br><span class="hljs-comment">//    list.add(new People(&quot;yangyang&quot;,age=22))</span><br><span class="hljs-comment">//    list.add(new People(&quot;zhiwei&quot;,age=23))</span><br>    <span class="hljs-keyword">val</span> columns = <span class="hljs-constructor">Seq(<span class="hljs-string">&quot;language&quot;</span>, <span class="hljs-string">&quot;users_count&quot;</span>)</span><br>    <span class="hljs-keyword">val</span> data = <span class="hljs-constructor">Seq((<span class="hljs-string">&quot;Java&quot;</span>, <span class="hljs-string">&quot;20000&quot;</span>)</span>, (<span class="hljs-string">&quot;Python&quot;</span>, <span class="hljs-string">&quot;10000&quot;</span>), (<span class="hljs-string">&quot;Scala&quot;</span>, <span class="hljs-string">&quot;30000&quot;</span>))<br>    <span class="hljs-keyword">val</span> value = data.<span class="hljs-keyword">to</span><span class="hljs-constructor">DF(<span class="hljs-params">columns</span>:<span class="hljs-params">_</span><span class="hljs-operator">*</span>)</span><br>    value.create<span class="hljs-constructor">TempView(<span class="hljs-string">&quot;test&quot;</span>)</span><br>    <span class="hljs-keyword">val</span> df=sc.sql(<span class="hljs-string">&quot;select * from test&quot;</span>).show<span class="hljs-literal">()</span><br><br>  &#125;<br>&#125;<br>case <span class="hljs-keyword">class</span> <span class="hljs-constructor">People(<span class="hljs-params">name</span>:String,<span class="hljs-params">age</span>:Int)</span><br></code></pre></td></tr></table></figure><blockquote><p>备注：<code>Exception in thread &quot;main&quot; java.lang.IllegalStateException: Library directory &#39;E:\ProjectName\assembly\target\scala-2.11\jars&#39; does not exist; make sure Spark is built.</code><br>出现这样的问题是因为没有设置SPARK_HOME，具体原因有待研究<br><br><a href="https://www.jianshu.com/p/4358f8446c8f">其他问题参考简书</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>big data</category>
      
    </categories>
    
    
    <tags>
      
      <tag>spark</tag>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>word中贴伪代码</title>
    <link href="/blog/2021/07/08/word%E4%B8%AD%E8%B4%B4%E4%BC%AA%E4%BB%A3%E7%A0%81/"/>
    <url>/blog/2021/07/08/word%E4%B8%AD%E8%B4%B4%E4%BC%AA%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="word中贴伪代码"><a href="#word中贴伪代码" class="headerlink" title="word中贴伪代码"></a>word中贴伪代码</h1><p>应用场景：<br>需要在word中贴如伪代码</p><ul><li>工具：TexStudio,word,Aurora</li><li>安装Aurora</li><li><a href="https://blog.csdn.net/qq_35987777/article/details/103499757">安装连接</a><br>使用word中的“引用”插入aurora对象输入示例</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[11pt]&#123;ctexart&#125;</span>  <br><span class="hljs-string">\usepackage[top=2cm,</span> bottom=<span class="hljs-number">2cm</span>, left=<span class="hljs-number">2cm</span>, right=<span class="hljs-number">2cm</span>]&#123;geometry&#125;  <br><span class="hljs-string">\usepackage&#123;algorithm&#125;</span>  <br><span class="hljs-string">\usepackage&#123;algorithmicx&#125;</span>  <br><span class="hljs-string">\usepackage&#123;algpseudocode&#125;</span>  <br><span class="hljs-string">\usepackage&#123;amsmath&#125;</span>  <br><br><span class="hljs-string">\floatname&#123;algorithm&#125;&#123;Algorithm&#125;</span>  <br><span class="hljs-string">\renewcommand&#123;\algorithmicrequire&#125;&#123;\textbf&#123;Input:&#125;&#125;</span>  <br><span class="hljs-string">\renewcommand&#123;\algorithmicensure&#125;&#123;\textbf&#123;Output:&#125;&#125;</span><br>  <br><br><span class="hljs-string">\begin&#123;document&#125;</span>  <br><span class="hljs-string">\begin&#123;algorithm&#125;[H]</span>  <br><span class="hljs-string">\caption&#123;BGFS&#125;</span>  <br><span class="hljs-string">\begin&#123;algorithmic&#125;[1]</span> %每行显示行号  <br><span class="hljs-string">\Require</span> $X <span class="hljs-string">\in</span> &#123;^&#123;n <span class="hljs-string">\times</span> m&#125;&#125;$,$Y <span class="hljs-string">\in</span> &#123;^&#123;n <span class="hljs-string">\times</span> <span class="hljs-number">1</span>&#125;&#125;$<br><span class="hljs-string">\Ensure</span> the selected feature subset $S$ <br><span class="hljs-string">\renewcommand&#123;\algorithmicensure&#125;&#123;\textbf&#123;Init:&#125;&#125;</span><br><span class="hljs-string">\Ensure</span> $Node=<span class="hljs-string">\emptyset$,$Edge=\emptyset$,$S=\emptyset$</span><br><span class="hljs-string">\For&#123;$i</span> = <span class="hljs-number">1</span> <span class="hljs-string">\to</span> m$&#125;  <br><span class="hljs-string">\State</span> $v_i=I(X_i,Y)$<br><span class="hljs-string">\State</span> $Node=Node <span class="hljs-string">\cup</span> <span class="hljs-string">\&#123;v_i\&#125;$</span>  <br><span class="hljs-string">\EndFor</span> <br><span class="hljs-string">\For&#123;$i</span> = <span class="hljs-number">1</span> <span class="hljs-string">\to</span> m$&#125;  <br><span class="hljs-string">\For&#123;$j</span> = i+<span class="hljs-number">1</span> <span class="hljs-string">\to</span> m$&#125;  <br><span class="hljs-string">\State</span> $e_&#123;ij&#125;=I(X_i,X_j)$<br><span class="hljs-string">\If&#123;$e_&#123;ij&#125;&lt;\theta$&#125;</span><br><span class="hljs-string">\State</span> $Edge=Edge<span class="hljs-string">\cup</span> <span class="hljs-string">\&#123;e_&#123;ij\&#125;&#125;$</span><br><span class="hljs-string">\EndIf</span><br><span class="hljs-string">\EndFor</span>  <br><span class="hljs-string">\EndFor</span> <br><span class="hljs-string">\State</span> $Construct<span class="hljs-string">\_graph(Node,Edge)$</span><br><span class="hljs-string">\For&#123;$i=1</span> <span class="hljs-string">\to</span> m$&#125;<br><span class="hljs-string">\State$Update(v_i)$</span><br><span class="hljs-string">\EndFor</span><br><br><span class="hljs-string">\For&#123;$i=1</span> <span class="hljs-string">\to</span> m$&#125;<br><span class="hljs-string">\State</span> $flag=<span class="hljs-number">0</span>$<br><span class="hljs-string">\State$neighbours=Ner(v_i)$</span><br><span class="hljs-string">\For&#123;$each\</span>  v_j <span class="hljs-string">\in</span> neighbours$&#125;<br><span class="hljs-string">\If&#123;$Max\_than(v_i,v_j)==true$&#125;</span><br><span class="hljs-string">\State$flag=flag+1$</span><br><span class="hljs-string">\EndIf</span><br><span class="hljs-string">\EndFor</span><br><span class="hljs-string">\If&#123;$flag&gt;\beta</span> * len(neighbours)$&#125;<br><span class="hljs-string">\State$S=S\cup</span> <span class="hljs-string">\&#123;i\&#125;$</span><br><span class="hljs-string">\EndIf</span><br><span class="hljs-string">\EndFor</span><br><br><span class="hljs-string">\end&#123;algorithmic&#125;</span>  <br><span class="hljs-string">\end&#123;algorithm&#125;</span>  <br><span class="hljs-string">\end&#123;document&#125;</span>  <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>伪代码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Word</tag>
      
      <tag>texStudio</tag>
      
      <tag>Aurora</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用hexo搭建blog并部署到github</title>
    <link href="/blog/2021/07/08/%E5%88%A9%E7%94%A8hexo%E6%90%AD%E5%BB%BAblog/"/>
    <url>/blog/2021/07/08/%E5%88%A9%E7%94%A8hexo%E6%90%AD%E5%BB%BAblog/</url>
    
    <content type="html"><![CDATA[<h1 id="利用hexo框架搭建个人博客教程"><a href="#利用hexo框架搭建个人博客教程" class="headerlink" title="利用hexo框架搭建个人博客教程"></a>利用hexo框架搭建个人博客教程</h1><p><strong>博客搭建涉及的技术：node.js 、hexo、git、markdown</strong></p><blockquote><p>hexo依赖nodejs；git方便下载博客主题或者部署到github；markdown作为博客内容的核心，整个hexo都是围绕markdown进行展开的，如果将撰写的一个个markdown看成一个数组，那么hexo可以看成是对这个数组的管理。</p></blockquote><p><strong>示例中采用的版本信息：</strong><br>  nodejs==14.17.3<br>    npm==6.4.13<br>    hexo==4.3.0</p><hr><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>自己百度</p><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><ol><li><strong>下载</strong><br>官网下载<code>node-v14.17.3-x64.msi</code>进行安装。</li><li><strong>验证node.js是否安装成功</strong><br>任意位置打开命令行cmd。<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\hzw&gt;node -v<br><span class="hljs-attribute">v14</span>.<span class="hljs-number">17</span>.<span class="hljs-number">3</span><br><br><span class="hljs-attribute">C</span>:\Users\hzw&gt;npm -v<br><span class="hljs-attribute">6</span>.<span class="hljs-number">14</span>.<span class="hljs-number">13</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><ol><li><strong>利用npm安装hexo</strong><br>打开hexo官网<code>https://hexo.io/zh-cn/</code>进行参考，<br>打开命令行终端输入：<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure></li><li>测试hexo是否完成安装</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\hzw&gt;hexo -v<br><span class="hljs-attribute">hexo</span>-cli: <span class="hljs-number">4</span>.<span class="hljs-number">3</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">os</span>: win<span class="hljs-number">32</span> <span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">19042</span><br><span class="hljs-attribute">node</span>: <span class="hljs-number">14</span>.<span class="hljs-number">17</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">v8</span>: <span class="hljs-number">8.4.371.23</span>-node.<span class="hljs-number">67</span><br><span class="hljs-attribute">uv</span>: <span class="hljs-number">1</span>.<span class="hljs-number">41</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">zlib</span>: <span class="hljs-number">1</span>.<span class="hljs-number">2</span>.<span class="hljs-number">11</span><br><span class="hljs-attribute">brotli</span>: <span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">ares</span>: <span class="hljs-number">1</span>.<span class="hljs-number">17</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">modules</span>: <span class="hljs-number">83</span><br><span class="hljs-attribute">nghttp2</span>: <span class="hljs-number">1</span>.<span class="hljs-number">42</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">napi</span>: <span class="hljs-number">8</span><br><span class="hljs-attribute">llhttp</span>: <span class="hljs-number">2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">openssl</span>: <span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>k<br><span class="hljs-attribute">cldr</span>: <span class="hljs-number">39</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">icu</span>: <span class="hljs-number">69</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">tz</span>: <span class="hljs-number">2021</span>a<br><span class="hljs-attribute">unicode</span>: <span class="hljs-number">13</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ol start="3"><li>新建blog</li></ol><ul><li>在任意文件夹位置打开命令行终端<br><img src="https://i.loli.net/2021/07/08/jMQuStKL1ibozed.png" alt="1.png"><br>&nbsp;&nbsp; 输入：</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo init blog<br><span class="hljs-regexp">//</span>其中blog为任意名字<br></code></pre></td></tr></table></figure><ul><li>打印结果为：</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs subunit">E:\Project\hexo&gt;hexo init blog<br>INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git<br><span class="hljs-keyword">error: </span>RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054<br>fatal: the remote end hung up unexpectedly<br>WARN  git clone failed. Copying data instead<br>INFO  Install dependencies<br>added 187 packages from 159 contributors and audited 188 packages in 27.378s<br><br>15 packages are looking for funding<br>  run `npm fund` for details<br><br>found 0 vulnerabilities<br><br>INFO  Start blogging with Hexo!<br></code></pre></td></tr></table></figure><ul><li>测试blog是否初始化成功<br><br>初始化完成后，hexo文件下有一个blog文件夹，用命令行进入blog文件夹，依次输入：</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd blog<br><span class="hljs-regexp">//</span>进入blog文件<br>hexo server<br><span class="hljs-regexp">//</span>E:\Project\hexo\blog&gt;hexo server<br></code></pre></td></tr></table></figure><p>如果出现以下打印说明初始化成功。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">E:\Project\hexo\blog&gt;hexo <span class="hljs-keyword">server</span><br><span class="hljs-keyword">INFO</span>  Validating config<br><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<br><span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.<br></code></pre></td></tr></table></figure><ul><li>浏览器输入<code>http://localhost:4000</code><br><img src="https://i.loli.net/2021/07/08/OY81MoQnCPi4m5f.png" alt="2.png"></li></ul><h2 id="更换blog主题"><a href="#更换blog主题" class="headerlink" title="更换blog主题"></a>更换blog主题</h2><ul><li>示例博客使用的是hexo中的fluid主题，根据fluid主题github中的指示进行安装<br><code>https://github.com/fluid-dev/hexo-theme-fluid</code><br><br>我们采用第二种方案进行安装：将fluid项目用git下载下来并更改文件夹名为fluid,放在<code>/blog/themes/</code>下。</li><li>修改<code>/blog/</code>文件夹下的<code>_config.yml</code></li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN  <span class="hljs-meta"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><ul><li><p>增加about（关于）页<br>输入</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>仔细观察<code>/source/</code>目录的变化</p></li><li><p>此时再次输入</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">hexo server<br>//该命令必须在初始化的`/blog`文件下才会有效<br></code></pre></td></tr></table></figure><p>&nbsp;&nbsp;已经更换主题了</p></li><li><p>如果我们想添加博客内容，有两种方案：</p></li></ul><ol><li>输入命令：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo new “markdown_name”<br><span class="hljs-regexp">//</span>仔细观察`<span class="hljs-regexp">/source/</span>_post/s`目录的变化<br></code></pre></td></tr></table></figure><ol start="2"><li>直接在<code>/_posts/</code>目录下添加<code>markdown.md</code>文件</li></ol><p>md文件格式为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">markdown_name</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">your</span> <span class="hljs-string">content</span><br><span class="hljs-string">//qizhong1</span><br></code></pre></td></tr></table></figure><p>当然你如果想写的更详细一点，例如指定每篇博客的分类和标签可以在每个markdown开头定义如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Tips</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2021-07-06 07:55:18</span><br><span class="hljs-attr">updated:</span> <span class="hljs-number">2021-07-08 08:55:19</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">大数据</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">脚本</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hive</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">python</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">shell</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><hr><p>至此你的博客已经完成</p><h2 id="部署blog到github"><a href="#部署blog到github" class="headerlink" title="部署blog到github"></a>部署blog到github</h2><p>这一步的操作是为了充分利用github pages的功能进行博客网站的搭建，当然你也可以自己购买服务器和域名进行个人博客网页的发布，例如执行完</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>会在根目录下形成一个public文件，里面就是一个静态网站，当然直接打开是不行的，需要配置<code>/blog/_config.yml</code>中的url和root,在此不作详细的解释。</p><ul><li>回归正题，如果我们想把刚刚搭建的博客发布到github上分为以下几个操作：<br>浏览器登录自己的github账户新建一个名为“blog”仓库。<br><img src="https://i.loli.net/2021/07/08/A2Zs6ztucgCdTLy.png" alt="3.png"><br></li></ul><p><strong>新建仓库的时候记得勾选add readme选项</strong><br><br>至此得到以上三个信息，首先打开settings按照图片中的步骤所示，会得到步骤5的网址<br><img src="https://i.loli.net/2021/07/08/2ft5Bq7IojQ18rp.png" alt="4.png"></p><ul><li>进入初始化blog的文件夹下(E:\Project\hexo\blog)执行</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install hexo-deployer-git --save<br><span class="hljs-regexp">//</span>如果不在初始化博客的文件下执行命令会报错<br></code></pre></td></tr></table></figure><ul><li>修改<code>/blog/_config.yml</code>文件中其中几项：</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">url: https:<span class="hljs-regexp">//m</span>anji460.github.io<span class="hljs-regexp">/blog/</span><br><span class="hljs-regexp">//gi</span>thub pages地址<br>deploy:<br>  type: git<br>  repo: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/manji460/</span>blog.git<br><span class="hljs-regexp">//gi</span>thub 仓库地址<br>  branch: main<br></code></pre></td></tr></table></figure><ul><li>修改完之后在<code>/blog/</code>目录下执行</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><ul><li>出现以下图片表示正在执行<br><img src="https://i.loli.net/2021/07/08/BgjtcJ6fxPCmH9k.png" alt="5.png"><br>查看github对应仓库是否有对应的内容</li><li>输入<code>https://manji460.github.io/blog/</code>查看博客<br>至此已完全部署好博客!</li></ul><h2 id="添加新博客"><a href="#添加新博客" class="headerlink" title="添加新博客"></a>添加新博客</h2><p>有两种方式添加新博客，上文已提及，更新完博客，重新部署blog，在<code>/blog/</code>下执行命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><h2 id="搜索问题"><a href="#搜索问题" class="headerlink" title="搜索问题"></a>搜索问题</h2><p>问题描述：博客关键字搜索功能失效。<br>原因：local-search.xml路径问题。<br>解决方案：在<code>/blog/_config.yml</code>中添加如下字段，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 搜索索引文件的路径，可以是相对路径或外站的绝对路径</span><br>  <span class="hljs-comment"># Path for search index file, it can be a relative path or an absolute path</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">/blog/local-search.xml</span><br><br>  <span class="hljs-comment"># 文件生成在本地的位置，必须是相对路径</span><br>  <span class="hljs-comment"># The location where the index file is generated locally, it must be a relative location</span><br>  <span class="hljs-attr">generate_path:</span> <span class="hljs-string">/blog/local-search.xml</span><br><br>  <span class="hljs-comment"># 搜索的范围</span><br>  <span class="hljs-comment"># Search field</span><br>  <span class="hljs-comment"># Options: post | page | all</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">post</span><br><br>  <span class="hljs-comment"># 搜索是否扫描正文</span><br>  <span class="hljs-comment"># If true, search will scan the post content</span><br>  <span class="hljs-attr">content:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>重新部署，如果不行添加hexo插件：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ npm install hexo-generator-searchdb <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>再次重新部署。</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>[1] <a href="https://hexo.io/themes/">hexo主题地址</a></p><p>[2] <a href="https://github.com/fluid-dev/hexo-theme-fluid.git">fluid主题github地址</a> </p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>nodejs</tag>
      
      <tag>git</tag>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/blog/2021/07/07/hello-world/"/>
    <url>/blog/2021/07/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
